#docker-compose for development
version: "3.7"
x-cache-from:
    - &ergonode-cache-from
        cache_from:
            - ${CONTAINER_REGISTRY_BASE:-ergonode}/nginx:latest
            - ${CONTAINER_REGISTRY_BASE:-ergonode}/php:latest
            - ${CONTAINER_REGISTRY_BASE:-ergonode}/nuxtjs:latest
            - ${CONTAINER_REGISTRY_BASE:-ergonode}/docsify:latest
x-php-environment:
    - &php-environment
        XDEBUG_CONFIG: ${XDEBUG_CONFIG:-remote_enable=1 remote_connect_back=1}
        PHP_IDE_CONFIG: ${PHP_IDE_CONFIG:-serverName=localhost}
        APP_URL: ${APP_URL:-http://nginx}
        JWT_PRIVATE_KEY_PATH: ${JWT_PRIVATE_KEY_PATH:-config/jwt/private.pem}
        JWT_PUBLIC_KEY_PATH: ${JWT_PUBLIC_KEY_PATH:-config/jwt/public.pem}
        JWT_PASSPHRASE: ${JWT_PASSPHRASE:-1234}
        PHP_INI_DIRECTIVES: ${PHP_INI_DIRECTIVES:-upload_max_filesize=250M; post_max_size = 250M; memory_limit=256M}
        MESSENGER_TRANSPORT_DSN: ${MESSENGER_TRANSPORT_DSN:-amqp://ergonode:ergonode@rabbitmq:5672/%2f/messages}
        MESSENGER_TRANSPORT_IMPORT_DSN: ${MESSENGER_TRANSPORT_IMPORT_DSN:-amqp://ergonode:ergonode@rabbitmq:5672/%2f/import}
        MESSENGER_TRANSPORT_CORE_DSN: ${MESSENGER_TRANSPORT_CORE_DSN:-amqp://ergonode:ergonode@rabbitmq:5672/%2f/core}
        MESSENGER_TRANSPORT_EXPORT_DSN: ${MESSENGER_TRANSPORT_EXPORT_DSN:-amqp://ergonode:ergonode@rabbitmq:5672/%2f/export}
        MESSENGER_TRANSPORT_DOMAIN_DSN: ${MESSENGER_TRANSPORT_DOMAIN_DSN:-amqp://ergonode:ergonode@rabbitmq:5672/%2f/domain}
        MESSENGER_TRANSPORT_CHANNEL_DSN: ${MESSENGER_TRANSPORT_CHANNEL_DSN:-amqp://ergonode:ergonode@rabbitmq:5672/%2f/chanel}
        MESSENGER_TRANSPORT_SEGMENT_DSN: ${MESSENGER_TRANSPORT_SEGMENT_DSN:-amqp://ergonode:ergonode@rabbitmq:5672/%2f/segment}
        MESSENGER_TRANSPORT_COMPLETENESS_DSN: ${MESSENGER_TRANSPORT_COMPLETENESS_DSN:-amqp://ergonode:ergonode@rabbitmq:5672/%2f/completeness}
        MESSENGER_TRANSPORT_NOTIFICATION_DSN: ${MESSENGER_TRANSPORT_NOTIFICATION_DSN:-amqp://ergonode:ergonode@rabbitmq:5672/%2f/notification}
x-php-messenger:
    - &php-messenger
        working_dir: /srv/app
        image: ${CONTAINER_REGISTRY_BASE:-ergonode}/php:${IMAGE_TAG:-latest}
        volumes:
            - ./backend:/srv/app
        environment:
            <<: *php-environment
        depends_on:
            - postgres
            - rabbitmq
        command: bin/console messenger:consume --sleep=10 --memory-limit=128M --time-limit=3600 -vv import channel export core event segment
        healthcheck:
            disable: true
        restart: on-failure
services:
    postgres:
        build:
            context: "./"
            target: postgres
            <<: *ergonode-cache-from
        image: ${CONTAINER_REGISTRY_BASE:-ergonode}/postgres:${IMAGE_TAG:-latest}
        volumes:
            - "./data/.postgres:/var/lib/postgresql/data:delegated"
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-123}
            POSTGRES_DB: ${POSTGRES_DB:-postgres}
            APP_USER: ${APP_USER:-ergonode}
            APP_USER_PASSWORD: ${APP_USER_PASSWORD:-123}
            APP_DB: ${APP_DB:-ergonode}
            APP_TEST_DB: ${APP_TEST_DB:-ergonode_test}
        ports:
            - "${EXPOSED_POSTGRES_PORT:-5432}:5432"
    php:
        build:
            context: "./"
            target: php
            <<: *ergonode-cache-from
        working_dir: /srv/app
        image: ${CONTAINER_REGISTRY_BASE:-ergonode}/php:${IMAGE_TAG:-latest}
        volumes:
            - ./backend:/srv/app:delegated
        environment:
            <<: *php-environment
        depends_on:
            - postgres
            - mailhog
    crond:
        build:
            context: "./"
            target: php
            <<: *ergonode-cache-from
        working_dir: /srv/app
        image: ${CONTAINER_REGISTRY_BASE:-ergonode}/php:${IMAGE_TAG:-latest}
        volumes:
            - ./backend:/srv/app:delegated
        environment:
            <<: *php-environment
        command: ["crond"]
        healthcheck:
            disable: true
    rabbitmq:
        image: rabbitmq:3.8-management-alpine
        hostname: rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-ergonode}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-ergonode}
        ports:
            - "${EXPOSED_RABBITMQ_PORT:-5672}:5672"
            - "${EXPOSED_RABBITMQ_WEB_PORT:-15672}:15672"
        healthcheck:
            test: ["CMD", "rabbitmq-diagnostics", "-q", "status"]
    php-messenger-import:
        <<: *php-messenger
        command: bin/console messenger:consume --sleep=${IMPORT_WORKER_SLEEP:-1} --memory-limit=${IMPORT_WORKER_MEMORY_LIMIT:-128M} --time-limit=${WORKER_TIME_LIMIT:-3600} -vv import
    php-messenger-channel:
        <<: *php-messenger
        command: bin/console messenger:consume --sleep=${WORKER_SLEEP:-1} --memory-limit=${WORKER_MEMORY_LIMIT:-128M} --time-limit=${WORKER_TIME_LIMIT:-3600} -vv channel
    php-messenger-export:
        <<: *php-messenger
        command: bin/console messenger:consume --sleep=${EXPORT_WORKER_SLEEP:-1} --memory-limit=${EXPORT_WORKER_MEMORY_LIMIT:-128M} --time-limit=${WORKER_TIME_LIMIT:-3600} -vv export
    php-messenger-core:
        <<: *php-messenger
        command: bin/console messenger:consume --sleep=${WORKER_SLEEP:-1} --memory-limit=${WORKER_MEMORY_LIMIT:-128M} --time-limit=${WORKER_TIME_LIMIT:-3600} -vv core
    php-messenger-event:
        <<: *php-messenger
        command: bin/console messenger:consume --sleep=${WORKER_SLEEP:-1} --memory-limit=${WORKER_MEMORY_LIMIT:-128M} --time-limit=${WORKER_TIME_LIMIT:-3600} -vv event
    php-messenger-segment:
        <<: *php-messenger
        command: bin/console messenger:consume --sleep=${WORKER_SLEEP:-1} --memory-limit=${WORKER_MEMORY_LIMIT:-128M} --time-limit=${WORKER_TIME_LIMIT:-3600} -vv segment
    php-messenger-completeness:
        <<: *php-messenger
        command: bin/console messenger:consume --sleep=${WORKER_SLEEP:-1} --memory-limit=${WORKER_MEMORY_LIMIT:-128M} --time-limit=${WORKER_TIME_LIMIT:-3600} -vv completeness
    php-messenger-notification:
        <<: *php-messenger
        command: bin/console messenger:consume --sleep=${WORKER_SLEEP:-1} --memory-limit=${WORKER_MEMORY_LIMIT:-128M} --time-limit=${WORKER_TIME_LIMIT:-3600} -vv notification
    nginx:
        build:
            context: ./
            target: nginx
            <<: *ergonode-cache-from
        image: ${CONTAINER_REGISTRY_BASE:-ergonode}/nginx:${IMAGE_TAG:-latest}
        volumes:
            - ./backend:/srv/app
        working_dir: /srv/app
        environment:
            PHP_HOST: ${PHP_HOST:-php}
            NUXTJS_HOST: ${PHP_HOST:-nuxtjs}
            NGINX_HTTP_DIRECTIVES: ${NGINX_HTTP_DIRECTIVES:-client_max_body_size 250m;}
        ports:
            - "${EXPOSED_NGINX_PORT:-8000}:80"
        depends_on:
            - php
    nuxtjs:
        build:
            context: "./"
            target: nuxtjs
            <<: *ergonode-cache-from
        image: ${CONTAINER_REGISTRY_BASE:-ergonode}/nuxtjs:${IMAGE_TAG:-latest}
        working_dir: /srv/app
        volumes:
            - "./frontend:/srv/app"
        ports:
            - "${EXPOSED_NODE_PORT:-80}:80"
        environment:
            EXPOSED_NODE_PORT: ${EXPOSED_NODE_PORT:-80}
            API_BASE_URL: ${API_BASE_URL:-http://localhost:8000/api/v1/}
    docsify:
        build:
            context: "./"
            target: docsify
            <<: *ergonode-cache-from
        image: ${CONTAINER_REGISTRY_BASE:-ergonode}/docs:${IMAGE_TAG:-latest}
        working_dir: /srv/app
        volumes:
            - "./docs:/srv/app"
        ports:
            - "${EXPOSED_DOCS_PORT:-8002}:3000"
    mailhog:
        image: mailhog/mailhog
        ports:
            - "${EXPOSED_MAILHOG_SMTP_PORT:-1025}:1025"
            - "${EXPOSED_MAILHOG_WEB_PORT:-8025}:8025"
networks:
    default:
